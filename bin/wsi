#!/usr/bin/env node

const fs = require('fs');
const readline = require('readline');
const _  = require(__dirname + '/../src/pbnj/core.js');
const ws = require(__dirname + '/../src/pbnj/wonderscript.js');

const HISTORY_FILE = process.cwd() + '/.wsi-history';

function currentModuleName() {
  return ws.NS_SCOPE.getName();
}

function loadHistory() {
  ws.readFile(HISTORY_FILE);
}

function appendHistory(exp) {
  fs.appendFileSync(HISTORY_FILE, [exp, "\n"].join(''));
}
  
if (process.argv.length >= 3) {
  try {
    ws.readFile([process.cwd(), process.argv[2]].join('/'));
    process.exitCode = 0;
  }
  catch (e) {
    console.error(e);
    process.exitCode = 1;
  }
}
else {
  const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout,
    removeHistoryDuplicates: true,
    terminal: true
  });
  
  ws.globalEnv.define('*dir*', process.cwd());
  ws.globalEnv.define('*file*', null);
  ws.readJS(
    ['do',
      ['say', ['str', '"WonderScript "', '*version*']],
      ['say', '*platform-version*'],
      ['say', ['str', '"Running in "', '*mode*', '" mode"']],
      ['say', '"   Exit: Control+D or exit"'],
      ['say', '"   Help: (doc function-name-here"'],
      ['say', '"         (source function-name-here"']]);
  rl.setPrompt(_.str(currentModuleName(), "> "));
  rl.prompt();

  //loadHistory();
  
  //var stack = _.list();
  rl.on('line', function(line) {
    try {
      var input = line.trim();
      if (input === 'exit') {
        console.log("Bye for now!");
        process.exit(0);
      }
      else {
        //appendHistory(input);
        var res = ws.readString(input);
        console.log(_.str("=> ", ws.inspect(res)));
        rl.setPrompt(_.str(currentModuleName(), "> "));
        //stack = _.conj(stack, res);
      }
    }
    catch (e) {
      console.error(e);
    }
    rl.prompt();
  }).on('close', function() {
    console.log("Bye for now!");
    process.exit(0);
  });
  process.exitCode = 0;
}
